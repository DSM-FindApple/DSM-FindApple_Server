# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: FindApple_CICD

on:
  release:
    types: [created]
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  CI:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: grant privileges to gradlew
        run: chmod +x gradlew

      - name: run test
        run: ./gradlew test

      - name: run build
        run: ./gradlew clean build -x test
          
      - name: Gradle Build
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --info
  CD:

    env:
      FA_URL: ${{secret.FA_URL}}
      FA_USERNAME: ${{secret_FA_USERNAME}}
      FA_PASSWORD: ${{secret_FA_PASSWORD}}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_PREFIX: ${{ secrets.JWT_PREFIX }}
      JWT_ACCESS: ${{ secrets.JWT_ACCESS }}
      JWT_REFRESH: ${{ secrets.JWT_REFRESH }}

    runs-on: ubuntu-latest
    needs: CI
    

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: grant privileges to gradlew
        run: chmod +x gradlew

      - name: run test
        run: ./gradlew test

      - name: run build
        run: ./gradlew clean build -x test
          
      - name: Gradle Build
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --info


      - name: Build Docker Image
        run: sudo docker build --tag findapple .

      - name: Upload to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: seogunhee4/dsm-findapple
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
